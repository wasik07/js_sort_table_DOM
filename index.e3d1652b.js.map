{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAY,SAAC,CAAnB,EAA0B,MAAA,CAAC,EAAG,WAAW,CAAC,OAAO,CAAC,MAAO,G,EAEnD,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAA,CAAI,CAA1C,EACE,EAAG,OAAO,CAAC,KAAK,CAAG,CACrB,GAEA,EAAM,OAAO,CAAG,SAAC,CAAjB,EACE,IAAM,EAAK,EAAE,MAAM,CAAC,OAAO,CAAC,MAE5B,GAAK,GAIL,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAU,EAAM,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEjC,EAAQ,EAAG,OAAO,CAAC,KAAK,CAe9B,AAbkB,EAAI,IAAI,CAAC,SAAC,CAAA,CAAO,CAAnC,EACE,IAAM,EAAS,EAAM,gBAAgB,CAAC,MAChC,EAAS,EAAM,gBAAgB,CAAC,MAChC,EAAW,CAAM,CAAC,EAAM,CAAC,WAAW,CACpC,EAAW,CAAM,CAAC,EAAM,CAAC,WAAW,QAE1C,AAAI,EAAU,CAAM,CAAC,EAAM,EAClB,EAAU,CAAM,CAAC,EAAM,EAAI,EAAU,CAAM,CAAC,EAAM,EAGpD,EAAS,aAAa,CAAC,EAChC,GAEU,OAAO,CAAC,SAAC,CAAnB,EAA0B,OAAA,EAAM,WAAW,CAAC,E,GAC9C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar getNumber = function(tr) {\n    return +tr.textContent.replace(/\\D/g, \"\");\n};\nvar tbody = document.querySelector(\"tbody\");\nvar thead = document.querySelector(\"thead\");\nthead.querySelectorAll(\"th\").forEach(function(th, index) {\n    th.dataset.index = index;\n});\nthead.onclick = function(e) {\n    var th = e.target.closest(\"th\");\n    if (!th) return;\n    var trs = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n    var index = th.dataset.index;\n    var sortedTrs = trs.sort(function(trOne, trTwo) {\n        var tdsOne = trOne.querySelectorAll(\"td\");\n        var tdsTwo = trTwo.querySelectorAll(\"td\");\n        var valueOne = tdsOne[index].textContent;\n        var valueTwo = tdsTwo[index].textContent;\n        if (getNumber(tdsTwo[index])) return getNumber(tdsOne[index]) - getNumber(tdsTwo[index]);\n        return valueOne.localeCompare(valueTwo);\n    });\n    sortedTrs.forEach(function(tr) {\n        return tbody.appendChild(tr);\n    });\n};\n\n//# sourceMappingURL=index.e3d1652b.js.map\n","'use strict';\n\nconst getNumber = (tr) => +tr.textContent.replace(/\\D/g, '');\n\nconst tbody = document.querySelector('tbody');\nconst thead = document.querySelector('thead');\n\nthead.querySelectorAll('th').forEach((th, index) => {\n  th.dataset.index = index;\n});\n\nthead.onclick = (e) => {\n  const th = e.target.closest('th');\n\n  if (!th) {\n    return;\n  }\n\n  const trs = [...tbody.querySelectorAll('tr')];\n\n  const index = th.dataset.index;\n\n  const sortedTrs = trs.sort((trOne, trTwo) => {\n    const tdsOne = trOne.querySelectorAll('td');\n    const tdsTwo = trTwo.querySelectorAll('td');\n    const valueOne = tdsOne[index].textContent;\n    const valueTwo = tdsTwo[index].textContent;\n\n    if (getNumber(tdsTwo[index])) {\n      return getNumber(tdsOne[index]) - getNumber(tdsTwo[index]);\n    }\n\n    return valueOne.localeCompare(valueTwo);\n  });\n\n  sortedTrs.forEach((tr) => tbody.appendChild(tr));\n};\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","getNumber","tr","textContent","replace","tbody","document","querySelector","thead","querySelectorAll","forEach","th","index","dataset","onclick","e","target","closest","trs","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sortedTrs","sort","trOne","trTwo","tdsOne","tdsTwo","valueOne","valueTwo","localeCompare","appendChild"],"version":3,"file":"index.e3d1652b.js.map"}